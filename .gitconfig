# Git configuration with useful aliases and settings

[user]
    # Set your name and email (customize these)
    # name = Your Name
    # email = your.email@example.com

[core]
    editor = vim
    autocrlf = input
    excludesfile = ~/.gitignore_global
    # Use diff-so-fancy or delta for better diffs
    # pager = diff-so-fancy | less --tabs=4 -RFX

[color]
    ui = auto
    branch = auto
    diff = auto
    status = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = green
    changed = yellow
    untracked = red

[alias]
    # Basic shortcuts
    st = status
    co = checkout
    br = branch
    ci = commit
    cm = commit -m
    ca = commit --amend
    can = commit --amend --no-edit

    # Staging
    a = add
    aa = add --all
    ap = add --patch
    unstage = reset HEAD --

    # Branch operations
    branches = branch -a
    remotes = remote -v
    new = checkout -b
    del = branch -d
    delete = branch -D

    # Diff
    d = diff
    ds = diff --staged
    dt = difftool
    dc = diff --cached

    # Log variants
    l = log --oneline --decorate --graph
    ll = log --oneline --decorate --graph --all
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lga = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all
    last = log -1 HEAD
    recent = log -10 --oneline --decorate

    # Push/Pull
    p = push
    pl = pull
    po = push origin
    puo = push -u origin
    pom = push origin master
    pomain = push origin main
    plom = pull origin master
    plomain = pull origin main

    # Stash
    ss = stash save
    sl = stash list
    sp = stash pop
    sa = stash apply
    sd = stash drop
    sc = stash clear

    # Undo
    undo = reset --soft HEAD~1
    amend = commit --amend --no-edit
    unamend = reset --soft HEAD@{1}

    # Remote
    rv = remote -v
    ra = remote add
    rr = remote remove
    ru = remote update

    # Show
    sh = show
    shs = show --stat

    # Tags
    tags = tag -l
    lasttag = describe --tags --abbrev=0

    # Rebase
    rb = rebase
    rbi = rebase -i
    rbc = rebase --continue
    rba = rebase --abort

    # Reset
    r = reset
    r1 = reset HEAD~1
    r2 = reset HEAD~2
    rh = reset --hard
    rh1 = reset --hard HEAD~1
    rh2 = reset --hard HEAD~2

    # Cherry-pick
    cp = cherry-pick
    cpc = cherry-pick --continue
    cpa = cherry-pick --abort

    # Cleanup
    prune = fetch --prune
    cleanup = !git branch --merged | grep -v \\* | xargs -n 1 git branch -d

    # Utility
    aliases = !git config --get-regexp alias | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\\t => \\2/' | sort
    contributors = shortlog -s -n
    unstaged = diff --name-only
    staged = diff --cached --name-only
    untracked = ls-files --others --exclude-standard
    ignored = ls-files --others -i --exclude-standard

    # Finding
    find = !git ls-files | grep -i
    grep = grep -Ii

    # Stats
    stats = shortlog -sn
    who = shortlog -s --

    # Assume unchanged (useful for local config files)
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = !git ls-files -v | grep ^h | cut -c 3-

[push]
    default = current
    followTags = true

[pull]
    rebase = false

[fetch]
    prune = true

[diff]
    tool = vimdiff
    colorMoved = zebra

[difftool]
    prompt = false

[merge]
    tool = vimdiff
    conflictstyle = diff3

[mergetool]
    prompt = false
    keepBackup = false

[rebase]
    autoStash = true

[help]
    autocorrect = 1

[init]
    defaultBranch = main

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[credential]
    helper = cache --timeout=3600

[status]
    showUntrackedFiles = all

[transfer]
    fsckobjects = true

[receive]
    fsckObjects = true

# Include local customizations
# Create ~/.gitconfig.local for machine-specific settings
[include]
    path = ~/.gitconfig.local
