name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:  # Allow manual triggers

env:
  NODE_ENV: production
  APP_NAME: yodo-lol
  DOMAIN: yodo.lol

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Optional: Run tests before deploying
      # - name: Install dependencies
      #   run: npm ci
      #
      # - name: Run tests
      #   run: npm test
      #
      # - name: Run linter
      #   run: npm run lint

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: Copy deployment script to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          scp -i ~/.ssh/deploy_key \
            -o StrictHostKeyChecking=no \
            scripts/deploy.sh \
            $SSH_USER@$SSH_HOST:~/deploy.sh

      - name: Deploy to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          DOMAIN: ${{ env.DOMAIN }}
          APP_NAME: ${{ env.APP_NAME }}
        run: |
          ssh -i ~/.ssh/deploy_key \
            -o StrictHostKeyChecking=no \
            $SSH_USER@$SSH_HOST \
            "OPENAI_API_KEY='$OPENAI_API_KEY' \
             REDDIT_CLIENT_ID='$REDDIT_CLIENT_ID' \
             REDDIT_CLIENT_SECRET='$REDDIT_CLIENT_SECRET' \
             DOMAIN='$DOMAIN' \
             APP_NAME='$APP_NAME' \
             bash ~/deploy.sh"

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.ssh/deploy_key

      - name: Deployment notification
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "Application is running at https://${{ env.DOMAIN }}"

      - name: Deployment failed
        if: failure()
        run: |
          echo "❌ Deployment failed. Check the logs above for details."
          exit 1
